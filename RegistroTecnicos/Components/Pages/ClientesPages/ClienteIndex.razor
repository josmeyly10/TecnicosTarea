@page "/Cliente/Index"
@inject ClientesService clientesService
@inject TecnicosService tecnicosService
@rendermode InteractiveServer

<PageTitle>Registro de Clientes</PageTitle>
<div class="container">
    <div class="card shadow-lg">
        <div class="card-header space-between">
            <h5 class="card-title">Registro de Clientes</h5>
            <a href="/Cliente/Create" class="btn btn-primary"> <span class="bi bi-plus-square mt-3"></span> Crear</a>
        </div>

        <div class="card-body">

            @*labels*@
            <div class="row">

                @*Filtrar por*@
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>

                @*ValorFiltro*@
                <div class="col-4">
                    <label class="col-form-label"><strong>B&uacute;squeda</strong></label>
                </div>
            </div>

            @*Inputs y botones*@
            <div class="row align-items-center">
                @*filtro*@
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opci&oacute;n</option>
                        <option value="Id">Id</option>
                        <option value="Clientes">Clientes</option>
                    </InputSelect>
                </div>

                @*Busqueda*@
                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
                    </div>
                </div>

            </div>

            <table class="table table-hover">
                <thead class="table  table-striped text-black">
                    <tr>
                        <th>ClienteId</th>
                        <th>Nombres</th>
                        <th>FechaIngreso</th>
                        <th>Direccion</th>
                        <th>Rnc</th>
                        <th>LimiteCredito</th>
                        <th>Nombre de tecnico</th>

                        <th>Editar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cliente in ListaClientes)
                    {
                        <tr>
                            <td> @cliente.ClientesId</td>
                            <td> @cliente.Nombres</td>
                            <td> @cliente.FechaIngreso</td>
                            <td> @cliente.Direccion</td>
                            <td> @cliente.Rnc</td>
                            <td> @cliente.LimiteCredito</td>
                            <td> @cliente.Tecnicos.Nombres</td>


                            <td>
                                <a href="/Cliente/Edit/@cliente.ClientesId" class="btn btn-outline-primary bi bi-pencil-square"></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer space-between">
            <label>Cantidad de clientes:  @ListaClientes.Count()</label>

        </div>
    </div>
</div>


@code {

    public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();
    public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaClientes = await clientesService.Listar(c=> c.ClientesId > 0);
        ListaTecnicos = await tecnicosService.Listar(t=> t.TecnicosId > 0);
    }

    private async Task Buscar()
    {
        if (ValorFiltro.Trim() != "")
        {
            if (Filtro == "Id" && int.TryParse(ValorFiltro, out int clienteId))
            {
                ListaClientes = await clientesService.Listar(c => c.ClientesId == clienteId);

            }
            else if (Filtro == "Clientes")
            {
                ListaClientes = await clientesService.Listar(c => c.Nombres.ToLower().Contains(ValorFiltro.ToLower()));
            }

        }
        else
            ListaClientes = await clientesService.Listar(c => c.ClientesId > 0);
    }




}
