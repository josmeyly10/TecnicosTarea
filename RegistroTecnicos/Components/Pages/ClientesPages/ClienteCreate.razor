@page "/Cliente/Create"
@inject ClientesService clientesService
@inject TecnicosService tecnicosService
@rendermode InteractiveServer
@inject NavigationManager navigationManager

@*HTML*@
<PageTitle>Create</PageTitle>
<EditForm Model="Cliente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />


    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Cliente</h5>
            </div>

            <div class="card-body ">


                @*Nombres*@
                <div class="mb-3">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control" @bind-Value="Cliente.Nombres"></InputText>
                    <ValidationMessage For="(() => Cliente.Nombres)" />
                </div>
                @*FechaIngreso*@
                <div class="mb-3">
                    <label class="form-label"><strong>FechaIngreso</strong></label>
                    <InputDate class="form-control" @bind-Value="Cliente.FechaIngreso"></InputDate>
                    <ValidationMessage For="(() => Cliente.FechaIngreso)" />
                </div>
                @*Direccion*@
                <div class="mb-3">
                    <label class="form-label"><strong>Direccion</strong></label>
                    <InputText class="form-control" @bind-Value="Cliente.Direccion"></InputText>
                    <ValidationMessage For="(() => Cliente.Direccion)" />

                </div>
                @*Rnc*@
                <div class="mb-3">
                    <label class="form-label"><strong>Rnc</strong></label>
                    <InputText class="form-control" @bind-Value="Cliente.Rnc"></InputText>
                    <ValidationMessage For="(() => Cliente.Rnc)" />
                </div>


                @*LimiteCredito*@
                <div class="mb-3">
                    <label class="form-label"><strong>LimiteCredito</strong></label>
                    <InputNumber class="form-control" @bind-Value="Cliente.LimiteCredito"></InputNumber>
                    <ValidationMessage For="(() => Cliente.LimiteCredito)" />
                </div>
                @*TecnicoId*@
                <InputSelect class="form-select" @bind-Value="Cliente.TecnicosId">
                    <option value="0"selected disabled>Elija un Tecnico</option>
                    @foreach(var Tecnico in Tecnicos){
                        <option value="@Tecnico.TecnicosId">@Tecnico.Nombres</option>
                    }
                </InputSelect>
            </div>

            @*footer*@
            <div class="card-footer text-center mt-2">
                <a href="/Cliente/Index" class="btn btn-secondary"> <span class="bi bi-arrow-left"></span> Volver</a>
                <button type="submit" class="btn btn-primary bi bi-floppy"> Guardar</button>

            </div>
        </div>
    </div>
</EditForm>



@code {
    [Parameter]
    public int ClienteId { get; set; }
    public List<Tecnicos> Tecnicos { get; set; } = new List<Tecnicos>();


    public Clientes Cliente { get; set; } = new Clientes();

    public string? Message { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync(){
        Tecnicos= await tecnicosService.Listar(t => true);
    }

    public async Task Guardar()
    {
        if (await Validar())
        {
            Message = " ya existe el cliente con este nombre";
            return;
        }
        var crear = await clientesService.Guardar(Cliente);

        if (crear)
        {
            Message = "se ha creado";
            navigationManager.NavigateTo("/Cliente/Index");
        }
        else
        {
            Message = " no se ha podido crear ";
        }
    }
    private async Task<bool> Validar()
    {
        var existe = await clientesService.ExisteCliente(Cliente.ClientesId, Cliente.Nombres);
        return existe;
    }

    public void volver()
    {
        navigationManager.NavigateTo("/Cliente/Index");
    }

    public void Nuevo()
    {
        this.Cliente = new Clientes();

    }
}