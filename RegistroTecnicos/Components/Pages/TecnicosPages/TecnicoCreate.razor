@page "/Tecnico/Create"
@inject TecnicosService tecnicosService
@rendermode InteractiveServer
@inject NavigationManager navigationManager

@*HTML*@
<PageTitle>Create</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />


    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Tecnico</h5>
            </div>

            <div class="card-body ">

               
                @*Nombres*@
                <div class="mb-3">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control" @bind-Value="Tecnico.Nombres"></InputText>
                    <ValidationMessage For="(() => Tecnico.Nombres)" />
                </div>
                @*SueldoHoras*@
                <div class="mb-3">
                    <label class="form-label"><strong>SueldoHoras</strong></label>
                    <InputNumber class="form-control" @bind-Value="Tecnico.SueldoHoras"></InputNumber>
                    <ValidationMessage For="(() => Tecnico.SueldoHoras)" />
                </div>
            </div>

            @*footer*@
            <div class="card-footer text-center mt-2">
                <a href="/Prestamo/Index" class="btn btn-secondary"> <span class="bi bi-arrow-left"></span> Volver</a>
                <button type="submit" class="btn btn-primary bi bi-floppy"> Guardar</button>
            </div>
        </div>
    </div>
</EditForm>



@code {
    [Parameter]
    public int TecnicoId { get; set; }

    public Tecnicos Tecnico { get; set; } = new Tecnicos();

    public string? Message { get; set; } = string.Empty;

    public async Task Guardar()
    {
        if(await Validar())
        {
            Message = " ya existe el tecnico con este nombre";
            return; 
        }
        var crear = await tecnicosService.Guardar(Tecnico);

        if(crear)
        {
            Message = "se ha creado";
            navigationManager.NavigateTo("/Tecnico/Index");
        }
        else 
        {
            Message = " no se ha podido crear ";
        }
    }
    private async Task<bool> Validar()
    {
        var existe = await tecnicosService.ExisteTecnico(Tecnico.TecnicosId, Tecnico.Nombres);
        return existe;
    }

    public void volver()
    {
        navigationManager.NavigateTo("/Tecnico/Index");
    }

    public void Nuevo()
    {
        this.Tecnico = new Tecnicos();

    }
}
